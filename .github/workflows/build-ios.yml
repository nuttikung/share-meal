name: Build and Sign iOS App

on:
  push:
    branches: [ develop ]
  # workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    environment: development

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: aarch64-apple-ios,x86_64-apple-ios,aarch64-apple-ios-sim

    - name: Install cargo-binstall
      run: curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash

    - name: Cache Dioxus CLI
      uses: actions/cache@v4
      id: cache-dioxus
      with:
        path: ~/.cargo/bin/dx
        key: ${{ runner.os }}-dioxus-cli-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-dioxus-cli-

    - name: Install Dioxus CLI
      if: steps.cache-dioxus.outputs.cache-hit != 'true'
      run: cargo binstall dioxus-cli

    - name: Build unsigned iOS bundle
      run: dx bundle --platform ios
      working-directory: .

    - name: Decode certificate
      run: echo "${{ secrets.IOS_CERTIFICATE }}" | base64 -d > certificate.p12

    - name: Decode provisioning profile
      run: echo "${{ secrets.IOS_PROVISIONING_PROFILE }}" | base64 -d > profile.mobileprovision

    - name: Install the Apple certificate and provisioning profile
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.IOS_CERTIFICATE }}
        P12_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
        BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.IOS_PROVISIONING_PROFILE }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

        # import certificate and provisioning profile from secrets
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
        echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

        # create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

        # import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH

        # apply provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

    - name: Create entitlements file
      env:
        APPLICATION_IDENTIFIER: ${{ secrets.APPLICATION_IDENTIFIER }}
        TEAM_IDENTIFIER: ${{ secrets.TEAM_IDENTIFIER }}
      run: |
        mkdir -p ios
        cat > ios/entitlements.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>application-identifier</key>
            <string>echo $APPLICATION_IDENTIFIER</string>
            <key>com.apple.developer.team-identifier</key>
            <string>echo $TEAM_IDENTIFIER</string>
        </dict>
        </plist>
        EOF

    - name: Copy Unsign Application
      run: |
        cp -R target/dx/shared_meal/release/ios/SharedMeal.app ios/SharedMeal.app
      working-directory: .

    - name: Copy Provision
      run: cp profile.mobileprovision ios/SharedMeal.app/embedded.mobileprovision
      working-directory: .

    - name: Copy Bundle and Sign
      env:
        TEAM_ID: ${{ secrets.TEAM_ID }}
        COMPANY_NAME: ${{ secrets.COMPANY_NAME }}
      run: |
        codesign --force --options runtime --entitlements entitlements.plist --sign "Apple Development: Phudit Chuengjaroen ("$TEAM_ID")" SharedMeal.app
      working-directory: ./ios

    - name: Archive to IPA
      run: |
        mkdir -p release
        cp -R ios/SharedMeal.app release/SharedMeal.app
        zip -r SharedMeal.ipa release/SharedMeal.app
      working-directory: .

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: SharedMeal.ipa
        path: ./release/SharedMeal.ipa
